from os.path import join as pjoin


def cnf(name, val):
    globals()[name] = config.setdefault(name, val)

cnf("WORK", "work")
cnf("COVIDMARCH", pjoin(WORK, "covidmarch.jsonl.zstd"))
cnf("USENEWS_FULLTEXT", pjoin(WORK, "usenews.fulltext.jsonl.zstd"))


rule all:
    input:
        COVIDMARCH,
        pjoin(WORK, "usenews.2019.pickles"),
        pjoin(WORK, "usenews.2020.pickles")

rule get_use_news_2019:
    output:
        pjoin(WORK, "usenews.2019.RData.xz")
    shell:
        "wget -nv -O {output} 'https://files.de-1.osf.io/v1/resources/uzca3/providers/osfstorage/5fabf6e81b9cb2005a6d3aa5?action=download&direct&version=2'"

rule get_use_news_2020:
    output:
        pjoin(WORK, "usenews.2020.RData.xz")
    shell:
        "wget -nv -O {output} 'https://files.de-1.osf.io/v1/resources/uzca3/providers/osfstorage/5fabfce00ec26c00618057c8?action=download&direct&version=2'"

rule extract_rdata:
    input:
        pjoin(WORK, "{base}.RData.xz")
    output:
        pjoin(WORK, "{base}.RData")
    shell:
        "xz -dk -T0 {input}"

rule convert_rdata:
    input:
        pjoin(WORK, "{base}.RData")
    output:
        directory(pjoin(WORK, "{base}.pickles"))
    shell:
        "python -m ingress.usenews_to_pickles {input} {output}"

rule save_use_news_urls:
    input:
        pjoin(WORK, "usenews.{year}.pickles/crowdtangle{year}.pkl")
    output:
        pjoin(WORK, "usenews.{year}.urls.txt")
    shell:
        "python -m ingress.save_usenews_urls {input} {output}"

rule cat_use_news_urls:
    input:
        urls19 = pjoin(WORK, "usenews.2019.urls.txt"),
        urls20 = pjoin(WORK, "usenews.2020.urls.txt")
    output:
        pjoin(WORK, "usenews.urls.txt")
    shell:
        "cat {input.urls19} {input.urls20} > {output}"

rule get_covid_march:
    output:
        COVIDMARCH
    shell:
        "python -m ingress.covidmarch | zstd -T0 -14 -f - -o {output}"

rule get_use_news_fulltext:
    output:
        USENEWS_FULLTEXT
    shell:
        "python -m ingress.usenews_fulltext urls.txt | zstd -T0 -14 -f - -o {output}"
